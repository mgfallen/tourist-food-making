version: "3.3"

services:
  openapi:
    build:
      context: .
      dockerfile: swagger/Dockerfile
    volumes:
      - ./swagger/swagger.yaml:/usr/share/nginx/html/swagger.yaml

#  nginx:
#    image: nginx:1.27.0
#    container_name: nginx
#    ports:
#      - "81:81"
#    volumes:
#      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
#      - ./swagger/swagger_html:/usr/share/nginx/html/swagger
#    depends_on:
#      - java-app
#      - go-app
#      - openapi
#    healthcheck:
#      test: [ "CMD", "nginx", "-t" ]
#      interval: 30s
#      timeout: 10s
#      retries: 3


  db:
    image: 'postgres:16.3-alpine'
    container_name: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "postgres"
    volumes:
      - /home/database-mount/pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # add later actuator for healtcheck
  java-app:
    container_name: java-app
    build:
      context: ./backend/food-making-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/postgres
    depends_on:
      - db
    ports:
      - "8081:8081"
    expose:
      - "8081"


  go-app:
    image: golang:1.16
    container_name: go-app
    build:
      context: ./backend/go-llm-backend
      dockerfile: Dockerfile
    depends_on:
      - db

  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    env_file:
      - ./frontend/.env
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://158.160.2.48:80" ]
      interval: 30s
      timeout: 10s
      retries: 3



volumes:
  pgdata:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /home/database-mount/pgdata
  swagger-ui:
    external: false

